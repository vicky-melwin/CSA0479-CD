%{
#include <stdio.h>
%}

%%
"int"|"float"|"char"|"void"|"return"|"if"|"else"|"for"|"while"|"do"|"switch"|"case"|"default"|"break"|"continue"|"goto"|"struct"|"union"|"enum"|"typedef" {
  printf("Keyword: %s\n", yytext);
}
[a-zA-Z][a-zA-Z0-9]* {
  printf("Identifier: %s\n", yytext);
}
[0-9]+ {
  printf("Integer constant: %s\n", yytext);
}
[0-9]+\.[0-9]+ {
  printf("Floating-point constant: %s\n", yytext);
}
"+"|"-"|"*"|"/"|"%"|"="|"=="|"!="|"<"|">"|"<="|">="|"&&"|"||"|"!"|"&"|"|"|"^"|"~"|"<<"|">>"|"<<"|">>" {
  printf("Operator: %s\n", yytext);
}
"(" { printf("Left parenthesis: (\n"); }
")" { printf("Right parenthesis: )\n"); }
"{" { printf("Left brace: {\n"); }
"}" { printf("Right brace: }\n"); }
";" { printf("Semicolon: ;\n"); }
"," { printf("Comma: ,\n"); }
[ \t\n] { /* Ignore whitespace */ }
. { printf("Unknown character: %s\n", yytext); }
%%

int main() {
  yyin = fopen("sample.c", "r");
  yylex();
  fclose(yyin);
}
int yywrap()
{
return 1;
}
